// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  email       String        @unique
  password    String
  roles       Role[]
  UserDebt    UserDebt[]
  UserPayment UserPayment[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime?     @updatedAt
}

model Role {
  id        Int       @id @default(autoincrement())
  name      String
  code      String    @unique
  users     User[]
  actions   Action[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Action {
  id        Int       @id @default(autoincrement())
  name      String
  code      String    @unique
  roles     Role[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Expenditure {
  id          Int           @id @default(autoincrement())
  title       String
  description String        @unique
  date        DateTime
  debets      UserDebt[]
  payments    UserPayment[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime?     @updatedAt
}

model UserDebt {
  id            Int         @id @default(autoincrement())
  userId        Int
  expenditureId Int
  user          User        @relation(fields: [userId], references: [id])
  Expenditure   Expenditure @relation(fields: [expenditureId], references: [id])
  cant          Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime?   @updatedAt
}

model UserPayment {
  id            Int         @id @default(autoincrement())
  userId        Int
  expenditureId Int
  user          User        @relation(fields: [userId], references: [id])
  Expenditure   Expenditure @relation(fields: [expenditureId], references: [id])
  cant          Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime?   @updatedAt
}
